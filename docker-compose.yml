version: '3.8'

services:
  # Main service with volume mount (recommended)
  bevnext-sam2:
    build: .
    image: bevnext-sam2:latest
    container_name: bevnext-sam2-main
    volumes:
      # Mount your local nuScenes dataset (UPDATE PATH)
      - /path/to/your/nuscenes:/workspace/data/nuscenes:ro
      # Mount outputs to persist results
      - ./outputs:/workspace/outputs
      # Optional: mount config overrides
      - ./configs:/workspace/configs:ro
    ports:
      - "8888:8888"  # Jupyter
      - "6006:6006"  # TensorBoard
    environment:
      - NUSCENES_DATA_ROOT=/workspace/data/nuscenes
      - PYTHONPATH=/workspace/bevnext-sam2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: bash
    
  # Service with persistent volume for downloaded data
  bevnext-sam2-download:
    build: .
    image: bevnext-sam2:latest
    container_name: bevnext-sam2-download
    volumes:
      # Persistent volume for downloaded dataset
      - nuscenes_data:/workspace/data/nuscenes
      - ./outputs:/workspace/outputs
    ports:
      - "8889:8888"  # Different port to avoid conflicts
      - "6007:6006"
    environment:
      - NUSCENES_DATA_ROOT=/workspace/data/nuscenes
      - DOWNLOAD_NUSCENES=true
      - PYTHONPATH=/workspace/bevnext-sam2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: bash

  # Service for Jupyter development
  bevnext-sam2-jupyter:
    build: .
    image: bevnext-sam2:latest
    container_name: bevnext-sam2-jupyter
    volumes:
      - /path/to/your/nuscenes:/workspace/data/nuscenes:ro
      - ./outputs:/workspace/outputs
      - ./notebooks:/workspace/notebooks  # Mount notebook directory
    ports:
      - "8888:8888"
      - "6006:6006"
    environment:
      - NUSCENES_DATA_ROOT=/workspace/data/nuscenes
      - PYTHONPATH=/workspace/bevnext-sam2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: >
      bash -c "mkdir -p /workspace/notebooks && 
               jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root 
               --notebook-dir=/workspace/notebooks"

  # Service for training with mounted data
  bevnext-sam2-training:
    build: .
    image: bevnext-sam2:latest
    container_name: bevnext-sam2-training
    volumes:
      - /path/to/your/nuscenes:/workspace/data/nuscenes:ro
      - ./outputs:/workspace/outputs
      - ./checkpoints:/workspace/checkpoints
    ports:
      - "6006:6006"  # Only TensorBoard for training monitoring
    environment:
      - NUSCENES_DATA_ROOT=/workspace/data/nuscenes
      - PYTHONPATH=/workspace/bevnext-sam2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: python training/train_bevnext_sam2_nuscenes.py --data-root /workspace/data/nuscenes

  # Service for evaluation only
  bevnext-sam2-eval:
    build: .
    image: bevnext-sam2:latest
    container_name: bevnext-sam2-eval
    volumes:
      - /path/to/your/nuscenes:/workspace/data/nuscenes:ro
      - ./outputs:/workspace/outputs
      - ./checkpoints:/workspace/checkpoints
    environment:
      - NUSCENES_DATA_ROOT=/workspace/data/nuscenes
      - PYTHONPATH=/workspace/bevnext-sam2
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    command: bash -c "scripts/run.sh eval"

volumes:
  # Persistent volume for downloaded nuScenes data
  nuscenes_data:
    driver: local 